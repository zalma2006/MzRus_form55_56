##
import os

import pandas as pd


class NameFiles:
    def __init__(self,
                 rename_region: dict,
                 file_type_choise: str,
                 forma: int = 55 | 56):

        self.check_name_files_new = None
        self.forma = forma
        self.rename_region = rename_region
        self.file_type_choise = file_type_choise
        self.path_file = None
        self.path_1 = None
        self.check_files_list = None
        if self.file_type_choise == 'xls':
            self.file_type = ('.xls', '.xlsx')
        elif self.file_type_choise == 'doc':
            self.file_type = ('.doc', '.docx')
        if self.forma == 55:
            self.base_path = [r'/home/maks/Документы/Ирина/диссертация/формы_мз_55_56/2015 г/ФОРМА 55/для_программы',
                              r'/home/maks/Документы/Ирина/диссертация/формы_мз_55_56/2016 г/ФОРМА 55/для_программы',
                              r'/home/maks/Документы/Ирина/диссертация/формы_мз_55_56/2017 г/ФОРМА 55/для_программы',
                              r'/home/maks/Документы/Ирина/диссертация/формы_мз_55_56/2018 г/ФОРМА 55/для_программы',
                              r'/home/maks/Документы/Ирина/диссертация/формы_мз_55_56/2019 г/ФОРМА 55/для_программы',
                              r'/home/maks/Документы/Ирина/диссертация/формы_мз_55_56/2020 г/ФОРМА 55/для_программы']
            if self.file_type_choise == 'doc':
                self.base_path = [os.path.dirname(_) for _ in self.base_path]
        elif self.forma == 56:
            self.base_path = [r'/home/maks/Документы/Ирина/диссертация/формы_мз_55_56/2015 г/ФОРМА 56/для_программы',
                              r'/home/maks/Документы/Ирина/диссертация/формы_мз_55_56/2016 г/ФОРМА 56/для_программы',
                              r'/home/maks/Документы/Ирина/диссертация/формы_мз_55_56/2017 г/ФОРМА 56/для_программы',
                              r'/home/maks/Документы/Ирина/диссертация/формы_мз_55_56/2018 г/ФОРМА 56/для_программы',
                              r'/home/maks/Документы/Ирина/диссертация/формы_мз_55_56/2019 г/ФОРМА 56/для_программы',
                              r'/home/maks/Документы/Ирина/диссертация/формы_мз_55_56/2020 г/ФОРМА 56/для_программы']
            if self.file_type_choise == 'doc':
                self.base_path = [os.path.dirname(_) for _ in self.base_path]

    def rename_files(self):
        for path in self.base_path:
            os.chdir(path)
            path_1 = os.getcwd()
            self.path_file = [x for x in os.listdir(os.getcwd()) if x.endswith(self.file_type) and not str(
                x).lower().__contains__('федерация')]
            papki = self.path_file
            for name_file in papki:
                name_file_lower = name_file.lower().strip().replace('h', 'н').replace('t', 'т').replace('a', 'а')
                name_file_lower = name_file_lower.replace('o', 'о').replace('c', 'с').replace('x', 'х').replace('p', 'р')
                name_file_lower = name_file_lower.replace('m', 'м').replace('k', 'к').replace('b', 'в')
                for rename_file, val in self.rename_region.items():
                    if rename_file in name_file_lower:
                        if rename_file == 'омск' and 'томск' in name_file_lower:
                            continue
                        else:
                            if self.file_type_choise == 'xls':
                                try:
                                    os.rename(path_1 + f'/{name_file}', path_1 + f'/{val}.xlsx')
                                except FileNotFoundError:
                                    continue
                            elif self.file_type_choise == 'doc':
                                try:
                                    os.rename(path_1 + f'/{name_file}', path_1 + f'/{val}.doc')
                                except FileNotFoundError:
                                    continue

            self.check_files_list = self.check_files()
            print(self.check_files_list)

    def check_files(self):
        self.check_name_files_new = [os.path.splitext(x)[0] for x in os.listdir(os.getcwd()) if str(x)[:2].isdigit()]
        self.check_files_list = list(set(list(rename_region.values())) - set(self.check_name_files_new))
        return self.check_files_list

# name_files = NameFiles(forma=55, rename_region=rename_region, file_type_choise='doc')

rename_region = {'алтайский': '22_Алтайский_край', 'амурск': '28_Амурская_область',
                 'архангель': '29_Архангельская_область', 'астраханск': '30_Астраханская_область',
                 'белгородск': '31_Белгородская_область', 'брянск': '32_Брянская_область',
                 'владимирск': '33_Владимирская_область', 'волгоградск': '34_Волгоградская_область',
                 'вологодск': '35_Вологодская_область', 'воронежск': '36_Воронежская_область',
                 'москва': '77_Москва', 'санкт-петербург': '78_Санкт_Петербург',
                 'севастоп': '92_Севастополь', 'еврей': '79_Еврейская_автономная_область',
                 'забайкал': '75_Забайкальский_край', 'ивановск': '37_Ивановская_область',
                 'иркутск': '38_Иркутская_область', 'калужск': '40_Калужская_область',
                 'камчат': '41_Камчатский_край', 'кемеров': '42_Кемеровская_область',
                 'киров': '43_Кировская_область', 'костром': '44_Костромкая_область',
                 'краснодар': '23_Краснодарский_край', 'красноярс': '24_Красноярский_край',
                 'курган': '45_Курганская_область', 'курск': '46_Курская_область',
                 'ленинградск': '47_Ленинградская_область', 'липецк': '48_Липецкая_область',
                 'магадан': '49_Магаданская_область', 'москов': '50_Московская_область',
                 'мурман': '51_Мурманская_область', 'ненецк': '83_Ненецкий_АО',
                 'нижегород': '52_Нижегородская_область', 'новгородск': '53_Новгородская_область',
                 'омск': '55_Омская_область', 'оренбург': '56_Оренбургская_область', 'орлов': '57_Орловская_область',
                 'пензен': '58_Пензенская_область', 'пермск': '59_Пермский_край', 'приморс': '25_Приморский_край',
                 'псков': '60_Псковская_область', 'адыге': '01_Республика_Адыгея', 'алтай': '04_Республика_Алтай',
                 'башкор': '02_Республика_Башкортостан', 'бурят': '03_Республика_Бурятия',
                 'дагест': '05_Республика_Дагестан', 'ингуш': '06_Республика_Ингушетия',
                 'кабардин': '07_Кабардино_Балкарская_Республика', 'калмык': '08_Республика_Калмыкия',
                 'карачаев': '09_Карачаево_Черкесская_Республика', 'карел': '10_Республика_Карелия',
                 'крым': '82_Республика_Крым', 'марий': '12_Республика_Марий_Эл', 'мордов': '13_Республика_Мордовия',
                 'якутия': '14_Республика_Саха_Якутия', 'алания': '15_Республика_Северная_Осетия_Алания',
                 'татарст': '16_Республика_Татарстан', 'тыва': '17_Республика_Тыва',
                 'удмурт': '18_Удмуртская_Республика', 'хакас': '19_Республика_Хакасия',
                 'чечен': '95_Чеченская_Республика', 'чуваш': '21_Чувашская_Республика',
                 'ростов': '61_Ростовская_область', 'рязан': '62_Рязанская_область',
                 'самар': '63_Самарская_область', 'саратов': '64_Саратовская_область',
                 'сахалин': '65_Сахалинская_область', 'свердловск': '66_Свердловская_область',
                 'смоленск': '67_Смоленская_область', 'ставрополь': '26_Ставропольский_край',
                 'тамбов': '68_Тамбовская_область', 'тверская': '69_Тверская_область', 'томск': '70_Томская_область',
                 'тульск': '71_Тульская_область', 'тюменск': '72_Тюменская_область',
                 'ульяновск': '73_Ульяновская_область', 'хабаров': '27_Хабаровский_край',
                 'ханты': '86_Ханты_Манскийский_АО', 'хмао': '86_Ханты_Манскийский_АО',
                 'челябинск': '74_Челябинская_область', 'чукот': '87_Чукотский_АО',
                 'ямал': '89_Ямало_Ненецкий_АО', 'янао': '89_Ямало_Ненецкий_АО',
                 'ярослав': '76_Ярославская_область', 'калининград': '39_Калининградская_область',
                 'новосиб': '54_Новосибирская_область', 'коми': '11_Республика_Коми'}
fly_yes_llc_group = ('воронежск', 'иркутск', 'курган', 'москов', 'нижегород', 'свердловск', 'томск', 'ленинградск',
                     'забайкал', 'камчат', 'приморс', '27_хабаровский_край', 'бурят', 'коми', 'якутия', 'ханты', 'хмао',
                     'дагест', 'москва')
fly_no_llc_group = ('мурман', 'новгородск', 'новосиб', 'омск', 'оренбург', 'псков', 'саратов', 'тамбов', 'тюменск',
                    'еврей', 'краснодар', 'красноярс', 'пермск', 'башкор', 'татарст', 'хакас', 'алтай', 'ненецк',
                    'амурск', 'архангельск', 'киров', 'костром', 'сахалин', 'калмык', 'карел', 'тыва')
no_fly_group = ('карачаев', 'ингуш', 'чуваш', 'чечен', 'мордов', 'удмурт', 'кемеров', 'орлов', 'ростов', 'рязан',
                'челябинск', 'ярослав', 'калужск', 'пензен', 'астраханск', 'липецк', 'магадан', 'кабардин',
                'самар', 'ставрополь', 'тверская', 'тульск', 'ульяновск', 'чукот', 'алания', 'брянск', 'волгоград',
                'крым')

def check_is_file(forma: int, region: dict, type_file: str = 'xlsx'):
    if forma == 55:
        base_path = [r'/home/maks/Документы/Ирина/диссертация/формы_мз_55_56/2015 г/ФОРМА 55/для_программы',
                     r'/home/maks/Документы/Ирина/диссертация/формы_мз_55_56/2016 г/ФОРМА 55/для_программы',
                     r'/home/maks/Документы/Ирина/диссертация/формы_мз_55_56/2017 г/ФОРМА 55/для_программы',
                     r'/home/maks/Документы/Ирина/диссертация/формы_мз_55_56/2018 г/ФОРМА 55/для_программы',
                     r'/home/maks/Документы/Ирина/диссертация/формы_мз_55_56/2019 г/ФОРМА 55/для_программы',
                     r'/home/maks/Документы/Ирина/диссертация/формы_мз_55_56/2020 г/ФОРМА 55/для_программы']

    if forma == 56:
        base_path = [r'/home/maks/Документы/Ирина/диссертация/формы_мз_55_56/2015 г/ФОРМА 56/для_программы',
                     r'/home/maks/Документы/Ирина/диссертация/формы_мз_55_56/2016 г/ФОРМА 56/для_программы',
                     r'/home/maks/Документы/Ирина/диссертация/формы_мз_55_56/2017 г/ФОРМА 56/для_программы',
                     r'/home/maks/Документы/Ирина/диссертация/формы_мз_55_56/2018 г/ФОРМА 56/для_программы',
                     r'/home/maks/Документы/Ирина/диссертация/формы_мз_55_56/2019 г/ФОРМА 56/для_программы',
                     r'/home/maks/Документы/Ирина/диссертация/формы_мз_55_56/2020 г/ФОРМА 56/для_программы']
    if type_file == 'doc':
        base_path = [os.path.dirname(_) for _ in base_path]

    for path in base_path:
        os.chdir(path)
        print('-' * 30)
        print(path.split('/')[-3:])
        print(f'Файлы которых не хватает')
        print(set(region.values()) - set([x.split('.')[0] for x in os.listdir(os.getcwd())]))
        print('-' * 30)
